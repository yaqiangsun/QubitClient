# -*- coding: utf-8 -*-
# Copyright (c) 2025 yaqiang.sun.
# This source code is licensed under the license found in the LICENSE file
# in the root directory of this source tree.
#########################################################################
# Author: yaqiangsun
# Created Time: 2025/10/20 18:13:37
########################################################################


import os
# import cv2
import numpy as np
import sys
# 获取当前文件的绝对路径，向上两层就是项目根目录
project_root = os.path.abspath(os.path.join(os.path.dirname(__file__), ".."))
if project_root not in sys.path:
    sys.path.insert(0, project_root)
# 
# `scope_api_client`: this package is generated by `openapi-python-client`
from .scope_api import Client
from .task import run_task
import logging
import numpy as np



logging.basicConfig(level=logging.INFO)


class QubitScopeClient(object):
    def __init__(self, url, api_key):
        self.url = url
        self.api_key = api_key
        self.client = Client(base_url=url)

    def request(self, file_list:list[str|dict[str,np.ndarray]],task_type:str="s21peak"):
        if len(file_list)>0:
            response = run_task(self.client,file_list,task_type)
        else:
            raise ValueError("file_list must not be empty")
        return response
    def get_result(self,response):
        if response.status_code == 200:
            logging.info("Result: %s", response.parsed)
            result = response.parsed
            return result
        else:
            logging.error("Error: %s %s", response.status_code, response.parsed)
            return []
    