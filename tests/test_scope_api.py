import os
# import cv2
import numpy as np
import sys
# 获取当前文件的绝对路径，向上两层就是项目根目录
project_root = os.path.abspath(os.path.join(os.path.dirname(__file__), ".."))
if project_root not in sys.path:
    sys.path.insert(0, project_root)
# 
# `scope_api_client`: this package is generated by `openapi-python-client`
from qubitclient.scope.scope_api import Client
from qubitclient.scope.scope_api.api.defined_tasks import s21peak_api_v1_tasks_scope_s21peak_post
from qubitclient.scope.scope_api.models import BodyS21PeakApiV1TasksScopeS21PeakPost
from qubitclient.scope.scope_api.types import File

client = Client(base_url="http://127.0.0.1:9000")

# 请将 'example_file.txt' 替换为您要上传的实际文件路径
file_path = "README.md"
try:
    with open(file_path, "rb") as f:
        file_content = f.read()
        files = [File(payload=file_content, file_name=file_path)]
except FileNotFoundError:
    print(f"错误：找不到文件 '{file_path}'。请检查路径并重试。")
except Exception as e:
    print(f"发生错误: {e}")


body: BodyS21PeakApiV1TasksScopeS21PeakPost = BodyS21PeakApiV1TasksScopeS21PeakPost(files=files)

# 调用同步接口
my_data: BodyS21PeakApiV1TasksScopeS21PeakPost = s21peak_api_v1_tasks_scope_s21peak_post.sync(client=client,body=body)
print(my_data)

# # 或者获取完整 Response 对象（包含 status_code、headers 等）
from qubitclient.scope.scope_api.types import Response
response: Response[BodyS21PeakApiV1TasksScopeS21PeakPost] = s21peak_api_v1_tasks_scope_s21peak_post.sync_detailed(client=client,body=body)
print(response)

import asyncio
from qubitclient.scope.scope_api import Client
from qubitclient.scope.scope_api.api.defined_tasks import s21peak_api_v1_tasks_scope_s21peak_post

async def main():
    async with Client(base_url="http://127.0.0.1:9000") as client:
        my_data = await s21peak_api_v1_tasks_scope_s21peak_post.asyncio(client=client,body=body)
        print(my_data)

asyncio.run(main())